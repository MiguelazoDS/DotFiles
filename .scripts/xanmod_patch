#!/usr/bin/env bash

function usage {
	printf "Usage: \n\txanmod_patch [Options]\n"
	printf -- "\t-o d for dry-run, -o p for patch and -o i for install"
	printf "\nOptions: \n"
	printf -- "\t-o <value> --option <value>\n"
}

function preset {
	printf "\nCreating mkinitcpio preset\n\n"
	sudo tee /etc/mkinitcpio.d/linux-xanmod-"$1".preset <<-EOF 
	# mkinitcpio preset file for the 'linux-xanmod-$1' package
	
	ALL_config="/etc/mkinitcpio.conf"
	ALL_kver="/boot/vmlinuz-xanmod-$1"
	
	PRESETS=('default' 'fallback')
	
	#default_config="/etc/mkinitcpio.conf"
	default_image="/boot/initramfs-xanmod-$1.img"
	#default_options=""
	
	#fallback_config="/etc/mkinitcpio.conf"
	fallback_image="/boot/initramfs-xanmod-$1-fallback.img"
	fallback_options="-S autodetect"
	EOF
}

if [ "$#" -lt 2 ]; then
	usage
	exit 0
fi

short=o:
long=option:

if ! getopt -n "$0" -o $short --long $long -- "$@" >/dev/null
then
	exit 1
fi

while true;
do
	case "$1" in
		-o | --option )
			shift
			option=$1
			shift
			;;
		* )
			shift
			break
			;;
	esac
done

major="5.4."
release="$(uname -r | sed "s/$major\(.*\)-xanmod1/\1/")"
linux_dir="$HOME/Documents/linux-$major$release-xanmod1"
url=$(curl -u MiguelazoDS:"$(cat ~/.scripts/github_token)" "https://api.github.com/repos/xanmod/linux/releases" | grep -E "browser_download_url.*${major}[0-9]{2}-xanmod1.*\/.*$release.*--.*" | cut -d'"' -f4)

patch=$(head -n 5 "$linux_dir"/Makefile | awk '/SUBLEVEL/ {print $3}')

if [[ "$option" == "p" ]] && [[ "$release" == "$patch" ]] && [[ -n "$url" ]]; then
	wget -q "$url"
	xz --decompress ./*.xz
	printf "\n\nPatching kernel\n"
	old_path=$(pwd)
	cd "$linux_dir" || exit
	file=$(ls "$old_path"/*--*)
	patch -p1 < "$file"
	head -n 5 Makefile
	cd "$old_path" || exit
	printf "\n\nRemove patch\n"
	trm ./*--*
elif [[ $option == "d" ]]; then
	printf "\nPatch available\n\n%s\n" "$url"
fi

patch=$(head -n 5 "$linux_dir"/Makefile | awk '/SUBLEVEL/ {print $3}')

printf "\nRelease installed: %s\nKernel patch installed: %s\n" "$release" "$patch"

if [[ "$option" == "i" ]] && [[ "$release" != "$patch" ]]; then
	cd "$linux_dir" || exit
	make oldconfig
	make LSMOD="$HOME"/.config/modprobed.db localmodconfig
	make -j"$(nproc)" bzImage
	make -j"$(nproc)" modules
	sudo make -j"$(nproc)" modules_install
	version="$(echo "$major$patch" | sed 's/\.//g')"
	sudo cp -i arch/x86/boot/bzImage /boot/vmlinuz-xanmod-"$version" 
	preset "$version"
	sudo mkinitcpio -p linux-xanmod-"$version"
	nvidia_version="$(nvidia-smi | awk '/NVIDIA-SMI/ {print $3}')"
	sudo dkms install nvidia/"$nvidia_version" -k "$major$patch-xanmod1"
	sudo grub-mkconfig -o /boot/grub/grub.cfg
	cd "$HOME" || exit
	mv "$linux_dir" $(echo "$linux_dir" | sed "s/\(\.*\)$release\(-xanmod1\)/\1$patch\2/g")
fi
