#!/usr/bin/env bash

function usage {
	printf "Usage: \n\txanmod_patch [Options]\n"
	printf -- "\t-o d for dry-run and -o e for execute"
	printf "\nOptions: \n"
	printf -- "\t-o <value> --option <value>\n"
}

if [ "$#" -lt 2 ]; then
	usage
	exit 0
fi

short=o:
long=option:

if ! getopt -n "$0" -o $short --long $long -- "$@" >/dev/null
then
	exit 1
fi

while true;
do
	case "$1" in
		-o | --option )
			shift
			option=$1
			shift
			;;
		* )
			shift
			break
			;;
	esac
done

major="5.4."
release="$(uname -r | sed "s/$major\(.*\)-xanmod1/\1/")"
linux_dir="$HOME/Documents/linux-$major$release-xanmod1"

url=$(curl -u MiguelazoDS:"$(cat github_token)" "https://api.github.com/repos/xanmod/linux/releases" | grep -E "browser_download_url.*${major}[0-9]{2}-xanmod1.*\/.*$release.*--.*" | cut -d'"' -f4)

patch=$(head -n 5 "$linux_dir"/Makefile | awk '/SUBLEVEL/ {print $3}')

if [[ "$option" == "e" ]] && [[ "$release" == "$patch" ]] && [[ -n "$url" ]]; then
	wget -q "$url"
	xz --decompress ./*.xz
	printf "\n\nPatching kernel\n"
	old_path=$(pwd)
	cd "$linux_dir" || exit
	file=$(ls "$old_path"/*--*)
	patch -p1 < "$file"
	patch -p0 < "$file"
	head -n 5 Makefile
	cd "$old_path" || exit
	printf "\n\nRemove patch\n"
	trm ./*--*
elif [[ $option == "d" ]]; then
	printf "\nPatch available\n\n %s" "$url"
fi

printf "\nRelease installed: %s\nKernel patch installed: %s\n" "$release" "$patch"
