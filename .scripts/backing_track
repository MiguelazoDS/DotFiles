#!/usr/bin/env bash

function name_ext(){
    name=$(echo "$1" | cut -d '.' -f1)
    ext=$(echo "$1" | cut -d '.' -f2)
}

function convert {
    printf "\nNormalize volume\n\n"
    check_program "mp3gain"
    mp3gain -c -r -p -d 6 "$1".mp3
    backing_tracks_folder="$HOME/Music/08- Backing_tracks"
    printf "\nMoving file to $backing_tracks_folder\n\n"
    [ ! -d "$backing_tracks_folder" ] && (mkdir "$backing_tracks_folder")
    mv "$1".mp3 "$backing_tracks_folder"
}

function with_vocals {
    printf "\nConverting backing track $name with vocals\n\n"
    bt_name_v="$name"" backingtrack (vocals)"
    ffmpeg -i output/"$name"/bass.wav -i output/"$name"/drums.wav -i output/"$name"/vocals.wav -filter_complex amix=inputs=3:duration=longest "$bt_name_v".mp3 2> /dev/null
    convert "$bt_name_v"
}

function without_vocals {
    printf "\nConverting backing track $name without vocals\n\n"
    bt_name="$name"" backingtrack (no vocals)"
    ffmpeg -i output/"$name"/bass.wav -i output/"$name"/drums.wav -filter_complex amix=inputs=2:duration=longest "$bt_name".mp3 2> /dev/null
    convert "$bt_name"
}

function clean {
    trm -rf output
}

function usage {
    printf "Usage: \n\tbacking_track [Options]\n"
    printf "\nOptions: \n"
    printf "\t-o <value> --option <value>\t 1: With Vocals,2: Without Vocals,3:Both\n"
    printf "\t-s <value> --song <value>\n"
}

function check_program {
    program="$1"
    hash "$program" 2>/dev/null
    [[ $? -eq 1 ]] && ([[ "$program" =~ "conda" ]] && program="anaconda"; printf "\n%s is not installed\nInstalling...\n" "$program"; yay -S "$program")
}

if [ "$#" -lt 4 ]; then
    usage
    exit 0
fi

short=os:
long=option,song:

if ! getopt -n "$0" -o $short --long "$long" -- "$@" >/dev/null
then
    exit 1
fi

while true;
do
    case "$1" in
        -o | --option )
            shift
            option=$1
            if [ ! $((option)) -gt 0 ] || [ ! $((option)) -lt 4 ]; then
                echo Invalid option
                exit 1
            fi
            shift
            ;;
        -s | --song )
            shift
            song=$1
            name_ext "$(basename "$song")"
            if [ -e "$song" ]; then
                if [ "$ext" != "mp3" ]; then
                    echo Invalid song format.
                    exit 1
                fi
            else
                echo File doesn\'t exist
                exit 1
            fi
            shift
            ;;
        * )
            shift
            break
            ;;
    esac
done

check_program "conda"

env_name=spleeter
spleeter_dir="$HOME/.conda/envs/$env_name"

if [[ ! -d "$spleeter_dir" ]]; then
    printf "%s environment does not exist\nCreating environment ...\n" $env_name
    conda create -n $env_name python=3.8
    printf "It's needed to close the terminal before env activation\n"
    printf "\nInstall with \"conda install -c conda-forge %$1s\" and remember to type \"conda activate %$1\"\n" $env_name
    read -n 1 -r -s -p $'Press enter to continue...\n'
    exit 0
fi

hash spleeter 2>/dev/null

if [[ $? -eq 1 ]]; then
    printf "\nRemember to execute conda activate %s before running this script\n" $env_name
    exit 0
else
    spleeter separate -p spleeter:4stems -o output "$song"

    case "$option" in
        1 )
            with_vocals
            clean
            ;;
        2 )
            without_vocals
            clean
            ;;
        * )
            with_vocals
            without_vocals
            clean
            ;;
    esac
fi
