#!/usr/bin/env bash

recompile=$HOME/.config/xmonad/recompile

function update {
    sudo snapper -c root create -d "Before upgrade"
    yay -Syy && yay -Syyu --devel --noconfirm; ${recompile}
}

function clean {
    yay -Sc --noconfirm
    temp=$(yay -Qtdq | tr '\n' ' ')
    if [ -n "$temp" ]; then
        printf "\nThe following packages are going to be removed\n%s" "$temp"
        yay -Rns $(echo "$temp") --noconfirm
        paccache -r
    fi
    setxkbmap es
    $HOME/.scripts/mouse_accel
}

function ignore {
    pkgs="$(yay -Qsq "$1" | tr '\n' ',')"
    sudo snapper -c root create -d "Before upgrade"
    yay -Syyu --ignore $pkgs --devel --noconfirm; ${recompile}
}

function delete_snapshots {
  readarray -t var < <(sudo snapper list)

  array=()
  for i in "${var[@]}"
  do
    if [[ "$i" =~ "Before upgrade" ]]; then
      id=$(echo "$i" | cut -d ' ' -f 1)
      array+=("$id")
    fi
  done

  # Without quotes so it does not consider as a unique value
  sudo snapper -c root delete ${array[*]}
  sudo snapper list
}

function usage {
    printf "Usage: \n\tarch_update [Options]\n"
    printf "\nOptions: \n"
    printf "\t-c --clean \n"
    printf "\t-i <value> --ignore <value>\n"
    printf "\t-d --delete \n"
}

args=("$@")

if [ "$#" -lt 2 ]; then
    if [ "$#" -eq 0 ]; then
        args+=("-a")
    elif [ ! "$1" = "-c" ] && [ ! "$1" = "-d" ]; then
        usage
        exit 0
    fi
fi

set -- ${args[*]}

# This order is important to make c and d option work.
short=acdi:
long=clean,delete,ignore:

if ! getopt -n "$0" -o $short --long "$long" -- "$@" >/dev/null
then
    exit 1
fi

while true;
do
    case "$1" in
        -a | --all )
            shift
            update
            clean
            shift
            ;;
        -c | --clean )
            shift
            clean
            shift
            ;;
        -d | --delete )
            shift
            delete_snapshots
            shift
            ;;
        -i | --ignore )
            shift
            regex=$1
            ignore "$regex"
            clean
            shift
            ;;
        * )
            shift
            break
            ;;
    esac
done
